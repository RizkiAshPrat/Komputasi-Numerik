{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Materi Komputasi Numerik Nama : Rizki Ashuri Pratama NIM : 190411100151 Dosen Pengampu : Mula'ab, S.Si., M.Kom.","title":"Home"},{"location":"Integrasi%20Numerik/","text":"Integrasi Numerik Integrasi atau Integral merupakan suatu bentuk penjumlahan yang dilakukan secara berkesinambungan dan berkebalikan dengan sebuah turunan. 1 Berikut merupakan rumus perhitungan Integrasi secara analitik : \\int ^{b}_{a}f\\left( x\\right) dx=\\left[ f\\left( x\\right) \\right] _{a}^{b}=f\\left( b\\right) -f\\left( a\\right) Pada dasarnya perhitungan integrasi numerik dapat dilakukan apabila terjadi kasus pada perhitungan analitik, seperti : Integrasi sulit diselesaikan dengan perhitungan secara analitik. Fungsi yang diintegralkan tidak dalam bentuk analitis, namun diberikan dalam bentuk data numerik di tabel. Metode integrasi numerik adalah integral tertentu yang didasarkan dalam hitungan asumsi. Hitungan asumsi tadi dilakukan menggunakan fungsi polinomial yang diperoleh berdasar data yang ada. 1 Terdapat beberapa metode penyelesaian dalam integrasi numerik, namun pada materi kali ini akan menggunakan metode Trapesium . Metode Trapesium Metode trapesium adalah metode integrasi numerik yang berdasarkan pada penjumlahan segmen-segmen (interval) berbentuk trapesium. 2 Bentuk umum metode Trapesium satu interval : \\int ^{b}_{a}f\\left( x\\right) dx=\\dfrac{b-a}{2}\\left[ f\\left( a\\right) +f\\left( b\\right) \\right] Pendekatan Integral dengan metode Trapesium : \\int ^{x_0+h}_{x_0}f\\left( x\\right) dx\\approx\\dfrac{h}{2}\\left[ f\\left( x_0\\right) +f\\left( x_0+h\\right) \\right] Algoritma Mendefinisikan fungsi yang akan diintegrasikan. Inisialisasi (hasilanalitik) dengan perhitungan analitik integrasinya dengan library scipy.integrate Menentukan untuk batas bawah (a) dan batas atas (b). Menentukan banyaknya interval (N). Menghitung lebar interval (h) h=\\dfrac{b-a}{N} Inisialisasi (I) dengan fungsi yang akan diintegrasikan dengan menggunakan (a) dan (b) I=f\\left( a\\right) +f\\left( b\\right) Inisialisasi (fak) dengan 2. Lakukan Looping sebanyak N. Inisialisasi (x) dengan perhitungan \\left( x\\right) =a+ih Hitung semua fungsi dan inisialisasikan kembali (I) I =I+2f\\left( x\\right) Inisialisasi (hasilnumerik) berdasarkan perhitungan (I) terakhir hasilnumerik=I\\left( h/2\\right) Inisialisasi (selisih) berdasarkan perhitungan hasilnumerik dengan hasilanalitik selisih=hasilanalitik - hasilnumerik Inisialisasi (kesalahan) berdasarkan perhitungan absolute antara selisih dengan hasilanalitik kesalahan=abs(selisih/hasilanalitik) Cetak hasilanalitik, hasilnumerik, selisih, dan kesalahan. Misalkan terdapat contoh kasus : \\int ^{3}_{1}\\left( 3x^{2}-2\\right) dx= Perhitungan dengan pendekatan secara numerik : Hitung interval h=\\dfrac{b-a}{N }=\\dfrac{3-1}{4}=0,5 Pada, x_0=1, f_0=[f(a)+f(b)]=26 x_1=1+0.5, f_0=[3\\times1.5^2-2]=4.75 x_2=1+2(0.5), f_0=[3\\times2^2-2]=10 x_3=1+3(0.5), f_0=[3\\times2.5^2-2]=16.75 x_4=1+4(0.5), f_0=[3\\times3^2-2]=25 Selanjutnya I menjadi, I = \\dfrac{h}{2}[ f_0 + 2f_1 + 2f_2 + 2f_3 + 2f_4] sehingga diperoleh I = \\dfrac{0.5}{2}[ 26 + 2(4.75) + 2(10) + 2(16.75) + 2(25)] = 22.5 Perhitungan menggunakan Code Program import scipy.integrate as sc def fungsi ( x ): y = 3 * x ** 2 - 2 return y hasilanalitik = sc . quad ( lambda x : 3 * x ** 2 - 2 , 1 , 3 ) a = float ( input ( \"Masukkan batas bawah integral : \" )) b = float ( input ( \"Masukkan batas atas integral : \" )) N = int ( input ( \"Masukkan jumlah interval : \" )) h = ( b - a ) / N I = fungsi ( a ) + fungsi ( b ) fak = 2 for i in range ( 1 , N ): x = a + i * h I = I + fak * fungsi ( x ) hasilnumerik = I * h / 2 selisih = hasilanalitik [ 0 ] - hasilnumerik kesalahan = abs ( selisih / hasilanalitik [ 0 ]) print ( \"Hasil Analitik : \" , hasilanalitik [ 0 ]) print ( \"Hasil Numerik : \" , hasilnumerik , \" dengan kesalahan(error) : \" , kesalahan ) Hasil Running Code Daftar Pustaka Dr.Achmad Fahrurozi, S.Si, M.Si, \"CAPTURE 5 - Integrasi Numerik\", in Matematika Lanjut 2 Sistem Informasi , Dr.Achmad Fahrurozi, S.Si, M.Si, http://achmad_fahrurozi.staff.gunadarma.ac.id/Downloads/files/67654/CAPTURE+5+-+Integrasi+Numerik.pdf (Diakses pada 26 Mei 2021) \u21a9 \u21a9 Supardi, M.Si, METODE NUMERIK dengan MATLAB . Yogyakarta, 2011. \u21a9","title":"Integrasi Numerik"},{"location":"Persamaan%20Deferensial/","text":"Persamaan Deferensial Biasa \u00b6 Persamaan Deferensial merupakan suatu persamaan yang memiliki satu atau beberapa turunan dari suatu fungsi yang tidak diketahui. 1 Persamaan Deferensial juga dapat dikatakan menjadi suatu deskripsi matematika mengenai suatu variabel derivatifnya terhadap satu atau lebih variabel independen, saling mempengaruhi satu dengan yang lain secara dinamis. Dalam penyelesaian persamaan deferensial menunjukkan bahwa suatu variabel dependen akan berubah jika variabel independennya berubah. 2 Berikut merupakan contoh Persamaan Deferensial Biasa : \\dfrac{dv(t)}{dt}-v(t)=e^t \\\\ \\dfrac{d^2x(t)}{dt^2}-5\\dfrac{dx(t)}{dt}+2x(t)=cos(t) Penjelasan : Dimana t pada d t merupakan variabel bebas. x(t) merupakan suatu fungsi yang tidak diketahui. Penulis akan membahas Solusi Permasalahan Persamaan Deferensial Biasa menggunakan metode Euler. Metode Euler \u00b6 Metode Euler merupakan sebuah metode Taylor orde pertama, atau dapat dikatakan suatu metode yang diturunkan dari Metode Taylor namun taylor Orde 1. 3 Persamaan Euler dalam menyelesaikan persamaan deferensial bisa dapat dituliskan menjadi : y_{i+1} = y_{i}+hf(x_{i}, y{i}) Algoritma Tentukan Persamaan. Tentukan titik awal integrasi dalam x0. Tentukn titik akhir integrasi dalam n. Tentukan y0. Tentukan ukuran h, dimana h merupakan jumlah step atau langkah. Lakukan Inetgrasi sesuai dengan soal persamaan. Contoh Kasus Selesaikan permasalahan persamaan deferensial biasa dengan interval t = 0 sampai 2 dimana y(0) = 1. Dengan Persamaan deferensialnya adalah : \\dfrac{dy}{dt}= yt^2-1.1y Dengan h=0.5 dan, h=0.25 Berikut tabel perhitungan h = 0.5 i h ti yi f(xi, yi) yi+1 0 0,5 0 1 -1,1 0,45 1 0,5 0,5 0,45 -0,3825 0,25875 2 0,5 1 0,25875 -0,02588 0,245813 3 0,5 1,5 0,245813 0,282684 0,387155 4 0,5 2 0,387155 1,122749 0,948529 Berikut tabel perhitungan h = 0.25 i h ti yi f(xi, yi) yi+1 0 0,25 0 1 -1,1 0,725 1 0,25 0,25 0,725 -0,75219 0,536953 2 0,25 0,5 0,536953 -0,45641 0,422851 3 0,25 0,75 0,422851 -0,22728 0,36603 4 0,25 1 0,36603 -0,0366 0,356879 5 0,25 1,25 0,356879 0,165057 0,398143 6 0,25 1,5 0,398143 0,457865 0,51261 7 0,25 1,75 0,51261 1,005997 0,764109 8 0,25 2 0,764109 2,215916 1,318088 Code Program def rumus ( y , t ): return float ( y * ( t ** 2 ) - 1.1 * y ) x = float ( input ( \"Masukan titik awal integrasi (x) : \" )) n = float ( input ( \"Masukan titik akhir integrasi (n) : \" )) y = float ( input ( \"Masukan y awal (y0) : \" )) h = float ( input ( \"Masukan jumlah step (h) : \" )) t = 0 i = 0 print ( 'i' , ' \\t ' , 'h' , ' \\t ' , 'ti' , ' \\t ' , 'yi' , ' \\t ' , 'f(xi, yi)' , ' \\t ' , 'yi+1' ) ##Metode Euler while t < n : t = i * h f = rumus ( y , t ) z = y y = y + h * f print ( i , ' \\t ' , h , ' \\t ' , t , ' \\t ' , \" %.4f \" % z , ' \\t ' , \" %.4f \" % f , ' \\t ' , \" %.4f \" % y ) i += 1 Hasil Output Screenshoot Perhitungan h = 0.5 Screenshoot Perhitungan h = 0.25 Daftar Pustaka Kusuma, \"Solusi Numerik Persamaan Diferensial Biasa Dengan Metode Adams-Bashforth-Moulton Orde Lima\", Jurnal Matematika, Statistika dan Komputasi , vol. 7, no. 1, pp. 49-55, 2010. Available: http://journal.unhas.ac.id/index.php/jmsk. [Accessed 14 June 2021]. \u21a9 Mulyono, \"KAJIAN SEJUMLAH METODE UNTUK MENCARI SOLUSI NUMERIK PERSAMAAN DIFERENSIAL\", Konferensi Nasional Penelitian Matematika dan Pembelajarannya (KNPMP I) Universitas Muhammadiyah Surakarta, 12 Maret 2016 , 2016. [Accessed 14 June 2021]. \u21a9 M. Rosidi, Metode Numerik Menggunakan R Untuk Teknik Lingkungan . PicktoChart, 2019. \u21a9","title":"Solusi Numerik Persamaan Deferensial Biasa"},{"location":"Persamaan%20Deferensial/#persamaan_deferensial_biasa","text":"Persamaan Deferensial merupakan suatu persamaan yang memiliki satu atau beberapa turunan dari suatu fungsi yang tidak diketahui. 1 Persamaan Deferensial juga dapat dikatakan menjadi suatu deskripsi matematika mengenai suatu variabel derivatifnya terhadap satu atau lebih variabel independen, saling mempengaruhi satu dengan yang lain secara dinamis. Dalam penyelesaian persamaan deferensial menunjukkan bahwa suatu variabel dependen akan berubah jika variabel independennya berubah. 2 Berikut merupakan contoh Persamaan Deferensial Biasa : \\dfrac{dv(t)}{dt}-v(t)=e^t \\\\ \\dfrac{d^2x(t)}{dt^2}-5\\dfrac{dx(t)}{dt}+2x(t)=cos(t) Penjelasan : Dimana t pada d t merupakan variabel bebas. x(t) merupakan suatu fungsi yang tidak diketahui. Penulis akan membahas Solusi Permasalahan Persamaan Deferensial Biasa menggunakan metode Euler.","title":"Persamaan Deferensial Biasa"},{"location":"Persamaan%20Deferensial/#metode_euler","text":"Metode Euler merupakan sebuah metode Taylor orde pertama, atau dapat dikatakan suatu metode yang diturunkan dari Metode Taylor namun taylor Orde 1. 3 Persamaan Euler dalam menyelesaikan persamaan deferensial bisa dapat dituliskan menjadi : y_{i+1} = y_{i}+hf(x_{i}, y{i}) Algoritma Tentukan Persamaan. Tentukan titik awal integrasi dalam x0. Tentukn titik akhir integrasi dalam n. Tentukan y0. Tentukan ukuran h, dimana h merupakan jumlah step atau langkah. Lakukan Inetgrasi sesuai dengan soal persamaan. Contoh Kasus Selesaikan permasalahan persamaan deferensial biasa dengan interval t = 0 sampai 2 dimana y(0) = 1. Dengan Persamaan deferensialnya adalah : \\dfrac{dy}{dt}= yt^2-1.1y Dengan h=0.5 dan, h=0.25 Berikut tabel perhitungan h = 0.5 i h ti yi f(xi, yi) yi+1 0 0,5 0 1 -1,1 0,45 1 0,5 0,5 0,45 -0,3825 0,25875 2 0,5 1 0,25875 -0,02588 0,245813 3 0,5 1,5 0,245813 0,282684 0,387155 4 0,5 2 0,387155 1,122749 0,948529 Berikut tabel perhitungan h = 0.25 i h ti yi f(xi, yi) yi+1 0 0,25 0 1 -1,1 0,725 1 0,25 0,25 0,725 -0,75219 0,536953 2 0,25 0,5 0,536953 -0,45641 0,422851 3 0,25 0,75 0,422851 -0,22728 0,36603 4 0,25 1 0,36603 -0,0366 0,356879 5 0,25 1,25 0,356879 0,165057 0,398143 6 0,25 1,5 0,398143 0,457865 0,51261 7 0,25 1,75 0,51261 1,005997 0,764109 8 0,25 2 0,764109 2,215916 1,318088 Code Program def rumus ( y , t ): return float ( y * ( t ** 2 ) - 1.1 * y ) x = float ( input ( \"Masukan titik awal integrasi (x) : \" )) n = float ( input ( \"Masukan titik akhir integrasi (n) : \" )) y = float ( input ( \"Masukan y awal (y0) : \" )) h = float ( input ( \"Masukan jumlah step (h) : \" )) t = 0 i = 0 print ( 'i' , ' \\t ' , 'h' , ' \\t ' , 'ti' , ' \\t ' , 'yi' , ' \\t ' , 'f(xi, yi)' , ' \\t ' , 'yi+1' ) ##Metode Euler while t < n : t = i * h f = rumus ( y , t ) z = y y = y + h * f print ( i , ' \\t ' , h , ' \\t ' , t , ' \\t ' , \" %.4f \" % z , ' \\t ' , \" %.4f \" % f , ' \\t ' , \" %.4f \" % y ) i += 1 Hasil Output Screenshoot Perhitungan h = 0.5 Screenshoot Perhitungan h = 0.25 Daftar Pustaka Kusuma, \"Solusi Numerik Persamaan Diferensial Biasa Dengan Metode Adams-Bashforth-Moulton Orde Lima\", Jurnal Matematika, Statistika dan Komputasi , vol. 7, no. 1, pp. 49-55, 2010. Available: http://journal.unhas.ac.id/index.php/jmsk. [Accessed 14 June 2021]. \u21a9 Mulyono, \"KAJIAN SEJUMLAH METODE UNTUK MENCARI SOLUSI NUMERIK PERSAMAAN DIFERENSIAL\", Konferensi Nasional Penelitian Matematika dan Pembelajarannya (KNPMP I) Universitas Muhammadiyah Surakarta, 12 Maret 2016 , 2016. [Accessed 14 June 2021]. \u21a9 M. Rosidi, Metode Numerik Menggunakan R Untuk Teknik Lingkungan . PicktoChart, 2019. \u21a9","title":"Metode Euler"},{"location":"SPL%20Gauss/","text":"Sistem Persamaan Linier \u00b6 Sistem Persamaan Linier merupakan sebuah ungkapan kesamaan dengan menggunakan tanda \"=\" yang melibatkan suatu konstanta, variabel dan operasi aritmatika. Menyelesaikan suatu sistem persamaan linier adalah mencari nilai-nilai dari sebuah variabel-variabel yang ada pada persamaan linear yang diberikan. 1 Metode yang digunakan dalam pembahasan ini merupkan jenis metode langsung yaitu metode Eliminasi Gauss . Metode Langsung merupakan penerapan operasi baris elementer yaitu operasi yang melakukan pengubahan nilai elemen dari suatu matriks berdasarkan barisnya, tanpa mengubah matriksnya. 1 Bentuk umum SPL(Sistem Persamaan Linear) : a_{11}x_{1}+a_{12}x_{2}+...+a_{1n}x_{n} = b1\\\\ a_{21}x_{1}+a_{22}x_{2}+...+a_{2n}x_{n} = b2\\\\ a_{31}x_{1}+a_{32}x_{2}+...+a_{3n}x_{n} = b3\\\\ \\vdots\\\\ a_{n1}x_{1}+a_{n2}x_{2}+...+a_{2nn}x_{n} = bn\\\\ Bentuk umum SPL diatas dapat ditulis kembali dalam bentuk matriks sebagai AX=B dengan A adalah sebuah matriks sebagai berikut : \\begin{pmatrix} a_{11}x_{1}&a_{12}x_{2}&...&a_{1n}x_{n}\\\\ a_{21}x_{1}&a_{22}x_{2}&...&a_{2n}x_{n}\\\\ a_{31}x_{1}&a_{32}x_{2}&...&a_{3n}x_{n}\\\\ \\vdots&\\vdots&\\vdots&\\vdots\\\\ a_{n1}x_{1}&a_{n2}x_{2}&...&a_{2nn}x_{n}\\\\ \\end{pmatrix} dan X dan B adalah vektor n-komponen: X=(x_{1},x_{2},x_{3}, \\dots, x_{n})^T B=(b_{1},b_{2},b_{3}, \\dots, b_{n})^T dengan pangkat T menyatakan operasi trasnpose matriks, yaitu suatu operasi untuk mengubah baris menjadi kolom dan kolom menjadi baris. Matriks A disebut dengan matriks koefisien, vektor B disebut dengan konstanta, dan vektor X disebut dengan variabel. Eliminasi Gauss \u00b6 Metode Eliminasi Gauss merupakan sebuah metode sistem persamaan linier yang mengubah SPL tersebut kedalam bentuk segitiga atas, dimana semua koefisien dibawah diagonal utamanya akan bernilai 0. Kemudian setelah terbentuk segitiga atas maka akan dilakukan Substitusi Mundur untuk mendapatkan penyelesaian SPL yang diberikan. 2 Dalam mendapatkan bentuk segitiga atas akan dilakukan sejumlah operasi Eliminasi Maju Operasi Baris Elementer (OBE) : Mengganti posisi dua persamaan (dua baris matriks augmented). Menambah persamaan (baris matriks augmented) dengan kelipatan persamaan pada baris lain. Mengalikan sebuah persamaan (baris matriks augmented) dengan sembarang konstanta yang tidak sama dengan nol. Algoritma Eliminasi Gauss Masukan jumlah sistem persamaan linear. Masukan persamaan kedalam matriks sesuai dengan baris dan kolomnya. Mencetak hasil inputan persamaan ke matriks. Menghitung Eliminasi Maju (OBE) perulangan sebanyak n dan setelah melakukan perhitungan setiap satu baris akan mencetak matriks A: Mengganti posisi dua persamaan (dua baris matriks augmented). Menambah persamaan (baris matriks augmented) dengan kelipatan persamaan pada baris lain. Mengalikan sebuah persamaan (baris matriks augmented) dengan sembarang konstanta yang tidak sama dengan nol. Memasukkan nilai 0 pada kolom k dibawah diagonal. Melakukan perhitungan Subtitusi Balik dari hasil Matrix A yang telah terbentuk menjadi segitiga atas. Membagi baris kolom terakhir dengan baris kolom sebelum terakhir untuk mendapatkan nilai variabel paling akhir. Melakukan perulangan dari n-2 hingga -1 menggunakan decrement 1 dan perulangan i+1 sebanyak n untuk melakukan perhitungan nilai variabel hingga sejumlah variabel berdasarkan nilai perhitungan pembagian baris kolom teraakhir sebelumnya. x[i] = x[i] - a[i][j]*x[j] Mencetak hasil perhitungan Substitusi balik. Contoh Kasus Terdapat Sistem Persamaan Linier 2x+3y-z=6\\\\ x+2y-4z=8\\\\ x+y+4z=4 Langkah Pertama \u00b6 Mengubah persamaan Linier menjadi Matriks \\begin{pmatrix} 2&3&-1&6\\\\ 1&2&-4&8\\\\ 1&1&4&4 \\end{pmatrix} Langkah Kedua \u00b6 Lakukan OBE Eliminasi Maju \\begin{pmatrix} 2&3&-1&6\\\\ 1&2&-4&8\\\\ 1&1&4&4 \\end{pmatrix} Dilakukan perhitungan sebagai berikut: b1=baris 1 b2=baris2 b3=baris3 b1-b2\\\\ b2-b1\\\\ Didapatkan hasilnya : \\begin{pmatrix} 1&1&3&-2\\\\ 0&1&-7&10\\\\ 1&1&4&4 \\end{pmatrix} Lalu dilakukan perhitungan OBE lagi dengan b3-b1 Didapatkan hasilnya : \\begin{pmatrix} 1&1&3&-2\\\\ 0&1&-7&10\\\\ 0&0&1&6 \\end{pmatrix} Langkah Terakhir Melakukan substitusi balik dari OBE Matriks z=6\\\\ y=10-(-7\\times6)/1=10+42/1 = 52\\\\ x=-(52+(3\\times6))-2=-72 Perhitungan Menggunakan Code Python # Importing NumPy Library import numpy as np import sys # Input Sistem Persamaan n = int ( input ( 'Masukkan jumlah sistem persamaan: ' )) # Membuat numpy array ukuran n x n+1 dengan inisialisasi 0 untuk menampung matrix nya a = np . zeros (( n , n + 1 )) # Membuat numpy array ukuran n dan inisialisasi 0 untuk hasilnya x = np . zeros ( n ) # Memeasukkan nilai Matric print ( 'Masukkan Nilai Matrix:' ) for i in range ( n ): for j in range ( n + 1 ): a [ i ][ j ] = float ( input ( 'a[' + str ( i ) + '][' + str ( j ) + ']=' )) #Cetak Matrix print ( ' \\n Matrix yang dihasilkan adalah : ' ) print ( a ) # Metode Eliminasi Gauss print ( ' \\n Eliminasi Gauss : ' ) for k in range ( n ): if a [ k ][ k ] == 0.0 : sys . exit ( 'Pembagian nol terdeteksi!' ) for i in range ( k + 1 , n ): factor = a [ i ][ k ] / a [ k ][ k ] for j in range ( n + 1 ): a [ i ][ j ] = a [ i ][ j ] - factor * a [ k ][ j ] print ( ' \\n ' , a ) # Subtitusi Mundur # Mencari nilai x terakhir print ( ' \\n Substitusi Mundur: ' ) x [ n - 1 ] = a [ n - 1 ][ n ] / a [ n - 1 ][ n - 1 ] for i in range ( n - 2 , - 1 , - 1 ): x [ i ] = a [ i ][ n ] for j in range ( i + 1 , n ): print ( ' \\n X %d = (X %d - a[ %d ][ %d ] * x %d ) /a[ %d ][ %d ]' % ( i , i , i , j , j , i , i ), ' = (' , x [ i ], '-' , a [ i ][ j ], 'x' , x [ j ], ') / ' , a [ i ][ i ] , '=' , end = ' ' ) x [ i ] = x [ i ] - a [ i ][ j ] * x [ j ] print ( x [ i ], '/' , a [ i ][ i ], '=' , x [ i ] / a [ i ][ i ]) x [ i ] = x [ i ] / a [ i ][ i ] # Menampilkan Hasil print ( ' \\n Hasil: ' ) for i in range ( n ): print ( 'X %d = %0.2f ' % ( i , x [ i ]), end = ' \\t ' ) Hasil Running Code Hasil running code berikut disesuaikan dengan persamaan pada contoh kasus diatas. Screenshoot 1 Screenshot 2 Screenshoot 3 Daftar Pustaka Sistem Persamaan Aljabar Linier (SPAL) , 2021. [online],[Accessed 11 June 2021]. Available from: http://repo-nkm.batan.go.id/9309/6/BAB_IV.pdf. \u21a9 \u21a9 SAHID, 2012, Pengantar Komputasi Numerik [online]. [Accessed 11 June 2021]. Available from: http://staffnew.uny.ac.id/upload/131930136/penelitian/KomputasiNumerikBab2.pdf \u21a9","title":"Solusi Numerik Sistem Persamaan Linier"},{"location":"SPL%20Gauss/#sistem_persamaan_linier","text":"Sistem Persamaan Linier merupakan sebuah ungkapan kesamaan dengan menggunakan tanda \"=\" yang melibatkan suatu konstanta, variabel dan operasi aritmatika. Menyelesaikan suatu sistem persamaan linier adalah mencari nilai-nilai dari sebuah variabel-variabel yang ada pada persamaan linear yang diberikan. 1 Metode yang digunakan dalam pembahasan ini merupkan jenis metode langsung yaitu metode Eliminasi Gauss . Metode Langsung merupakan penerapan operasi baris elementer yaitu operasi yang melakukan pengubahan nilai elemen dari suatu matriks berdasarkan barisnya, tanpa mengubah matriksnya. 1 Bentuk umum SPL(Sistem Persamaan Linear) : a_{11}x_{1}+a_{12}x_{2}+...+a_{1n}x_{n} = b1\\\\ a_{21}x_{1}+a_{22}x_{2}+...+a_{2n}x_{n} = b2\\\\ a_{31}x_{1}+a_{32}x_{2}+...+a_{3n}x_{n} = b3\\\\ \\vdots\\\\ a_{n1}x_{1}+a_{n2}x_{2}+...+a_{2nn}x_{n} = bn\\\\ Bentuk umum SPL diatas dapat ditulis kembali dalam bentuk matriks sebagai AX=B dengan A adalah sebuah matriks sebagai berikut : \\begin{pmatrix} a_{11}x_{1}&a_{12}x_{2}&...&a_{1n}x_{n}\\\\ a_{21}x_{1}&a_{22}x_{2}&...&a_{2n}x_{n}\\\\ a_{31}x_{1}&a_{32}x_{2}&...&a_{3n}x_{n}\\\\ \\vdots&\\vdots&\\vdots&\\vdots\\\\ a_{n1}x_{1}&a_{n2}x_{2}&...&a_{2nn}x_{n}\\\\ \\end{pmatrix} dan X dan B adalah vektor n-komponen: X=(x_{1},x_{2},x_{3}, \\dots, x_{n})^T B=(b_{1},b_{2},b_{3}, \\dots, b_{n})^T dengan pangkat T menyatakan operasi trasnpose matriks, yaitu suatu operasi untuk mengubah baris menjadi kolom dan kolom menjadi baris. Matriks A disebut dengan matriks koefisien, vektor B disebut dengan konstanta, dan vektor X disebut dengan variabel.","title":"Sistem Persamaan Linier"},{"location":"SPL%20Gauss/#eliminasi_gauss","text":"Metode Eliminasi Gauss merupakan sebuah metode sistem persamaan linier yang mengubah SPL tersebut kedalam bentuk segitiga atas, dimana semua koefisien dibawah diagonal utamanya akan bernilai 0. Kemudian setelah terbentuk segitiga atas maka akan dilakukan Substitusi Mundur untuk mendapatkan penyelesaian SPL yang diberikan. 2 Dalam mendapatkan bentuk segitiga atas akan dilakukan sejumlah operasi Eliminasi Maju Operasi Baris Elementer (OBE) : Mengganti posisi dua persamaan (dua baris matriks augmented). Menambah persamaan (baris matriks augmented) dengan kelipatan persamaan pada baris lain. Mengalikan sebuah persamaan (baris matriks augmented) dengan sembarang konstanta yang tidak sama dengan nol. Algoritma Eliminasi Gauss Masukan jumlah sistem persamaan linear. Masukan persamaan kedalam matriks sesuai dengan baris dan kolomnya. Mencetak hasil inputan persamaan ke matriks. Menghitung Eliminasi Maju (OBE) perulangan sebanyak n dan setelah melakukan perhitungan setiap satu baris akan mencetak matriks A: Mengganti posisi dua persamaan (dua baris matriks augmented). Menambah persamaan (baris matriks augmented) dengan kelipatan persamaan pada baris lain. Mengalikan sebuah persamaan (baris matriks augmented) dengan sembarang konstanta yang tidak sama dengan nol. Memasukkan nilai 0 pada kolom k dibawah diagonal. Melakukan perhitungan Subtitusi Balik dari hasil Matrix A yang telah terbentuk menjadi segitiga atas. Membagi baris kolom terakhir dengan baris kolom sebelum terakhir untuk mendapatkan nilai variabel paling akhir. Melakukan perulangan dari n-2 hingga -1 menggunakan decrement 1 dan perulangan i+1 sebanyak n untuk melakukan perhitungan nilai variabel hingga sejumlah variabel berdasarkan nilai perhitungan pembagian baris kolom teraakhir sebelumnya. x[i] = x[i] - a[i][j]*x[j] Mencetak hasil perhitungan Substitusi balik. Contoh Kasus Terdapat Sistem Persamaan Linier 2x+3y-z=6\\\\ x+2y-4z=8\\\\ x+y+4z=4","title":"Eliminasi Gauss"},{"location":"SPL%20Gauss/#langkah_pertama","text":"Mengubah persamaan Linier menjadi Matriks \\begin{pmatrix} 2&3&-1&6\\\\ 1&2&-4&8\\\\ 1&1&4&4 \\end{pmatrix}","title":"Langkah Pertama"},{"location":"SPL%20Gauss/#langkah_kedua","text":"Lakukan OBE Eliminasi Maju \\begin{pmatrix} 2&3&-1&6\\\\ 1&2&-4&8\\\\ 1&1&4&4 \\end{pmatrix} Dilakukan perhitungan sebagai berikut: b1=baris 1 b2=baris2 b3=baris3 b1-b2\\\\ b2-b1\\\\ Didapatkan hasilnya : \\begin{pmatrix} 1&1&3&-2\\\\ 0&1&-7&10\\\\ 1&1&4&4 \\end{pmatrix} Lalu dilakukan perhitungan OBE lagi dengan b3-b1 Didapatkan hasilnya : \\begin{pmatrix} 1&1&3&-2\\\\ 0&1&-7&10\\\\ 0&0&1&6 \\end{pmatrix}","title":"Langkah Kedua"},{"location":"license/","text":"License \u00b6 MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY Support Author \u00b6 Amazon wish list","title":"License"},{"location":"license/#license","text":"MIT License The graduate cap icon made by Freepik from www.flaticon.com is licensed by CC 3.0 BY","title":"License"},{"location":"license/#support_author","text":"Amazon wish list","title":"Support Author"},{"location":"material-for-mkdocs/","text":"Material for MkDocs \u00b6 MkDocs \u00b6 mkdocs/mkdocs: Project documentation with Markdown - GitHub Material for MkDocs \u00b6 squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs","text":"","title":"Material for MkDocs"},{"location":"material-for-mkdocs/#mkdocs","text":"mkdocs/mkdocs: Project documentation with Markdown - GitHub","title":"MkDocs"},{"location":"material-for-mkdocs/#material_for_mkdocs_1","text":"squidfunk/mkdocs-material: A Material Design theme for MkDocs","title":"Material for MkDocs"},{"location":"extensions/code-hilite/","text":"CodeHilite \u00b6 CodeHilite - Material for MkDocs Supported languages - Pygments Configure mkdocs.yml \u00b6 markdown_extensions : - codehilite","title":"CodeHilite"},{"location":"extensions/code-hilite/#codehilite","text":"CodeHilite - Material for MkDocs Supported languages - Pygments","title":"CodeHilite"},{"location":"extensions/code-hilite/#configure_mkdocsyml","text":"markdown_extensions : - codehilite","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/","text":"Footnote \u00b6 Footnotes - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions : - footnotes Example \u00b6 Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Footnote"},{"location":"extensions/footnote/#footnote","text":"Footnotes - Material for MkDocs","title":"Footnote"},{"location":"extensions/footnote/#configure_mkdocsyml","text":"markdown_extensions : - footnotes","title":"Configure mkdocs.yml"},{"location":"extensions/footnote/#example","text":"Footnote example 1. 1 Footnote example 2. 2 One line \u21a9 First line Second line \u21a9","title":"Example"},{"location":"extensions/mathjax/","text":"MathJax \u00b6 PyMdown - Material for MkDocs Configure mkdocs.yml \u00b6 markdown_extensions : - mdx_math : enable_dollar_delimiter : True Example code \u00b6 $$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$ Example rendering \u00b6 P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"MathJax"},{"location":"extensions/mathjax/#mathjax","text":"PyMdown - Material for MkDocs","title":"MathJax"},{"location":"extensions/mathjax/#configure_mkdocsyml","text":"markdown_extensions : - mdx_math : enable_dollar_delimiter : True","title":"Configure mkdocs.yml"},{"location":"extensions/mathjax/#example_code","text":"$$ P \\c dot Q = \\| P \\|\\| Q \\|\\c os \\a lpha $$","title":"Example code"},{"location":"extensions/mathjax/#example_rendering","text":"P\\cdot Q = \\|P\\|\\|Q\\|\\cos\\alpha","title":"Example rendering"},{"location":"getting-started/docker/","text":"Start with Docker \u00b6 Public docker image \u00b6 Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub docker-compose \u00b6 Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"Start with Docker"},{"location":"getting-started/docker/#start_with_docker","text":"","title":"Start with Docker"},{"location":"getting-started/docker/#public_docker_image","text":"Package mkdocs-material - GitHub peaceiris/mkdocs-material - Docker Hub","title":"Public docker image"},{"location":"getting-started/docker/#docker-compose","text":"Here is an example docker-compose.yml Please check the latest tag before you go. docker-compose up Go to http://localhost:8000/","title":"docker-compose"},{"location":"getting-started/download-boilerplate/","text":"Download boilerplate \u00b6 Git clone \u00b6 git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate Download zip \u00b6 wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#download_boilerplate","text":"","title":"Download boilerplate"},{"location":"getting-started/download-boilerplate/#git_clone","text":"git clone https://github.com/peaceiris/mkdocs-material-boilerplate.git cd mkdocs-material-boilerplate","title":"Git clone"},{"location":"getting-started/download-boilerplate/#download_zip","text":"wget 'https://github.com/peaceiris/mkdocs-material-boilerplate/archive/master.zip' unzip master.zip cd mkdocs-material-boilerplate-master \ud83d\udc49 Click me to download zip","title":"Download zip"},{"location":"getting-started/invoke/","text":"Serve and open with invoke \u00b6 invoke \u00b6 Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution. Serve and open \u00b6 Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml Show all tasks \u00b6 $ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#serve_and_open_with_invoke","text":"","title":"Serve and open with invoke"},{"location":"getting-started/invoke/#invoke","text":"Invoke is a Python (2.7 and 3.4+) library for managing shell-oriented subprocesses and organizing executable Python code into CLI-invokable tasks. It draws inspiration from various sources (make/rake, Fabric 1.x, etc) to arrive at a powerful & clean feature set. pyinvoke/invoke: Pythonic task management & command execution.","title":"invoke"},{"location":"getting-started/invoke/#serve_and_open","text":"Run mkdocs serve and open browser automatically. inv serve Serving on localhost:8000 # set IP and port inv serve --dev-addr 'localhost:5000' # set config file inv serve --config-file ./mkdocs-sample.yml","title":"Serve and open"},{"location":"getting-started/invoke/#show_all_tasks","text":"$ inv --list Available tasks: serve Serve site and open browser Show task help. $ inv serve --help Usage: inv [ oke ] [ --core-opts ] serve [ --options ] [ other tasks here ... ] Docstring: Serve site and open browser Options: -c STRING, --config-file = STRING Provide a specific MkDocs config -d STRING, --dev-addr = STRING IP address and port to serve documentation locally ( default: localhost:8000 ) Tasks are defined by tasks.py","title":"Show all tasks"},{"location":"getting-started/pip/","text":"Start with pip (Anaconda, Miniconda) \u00b6 pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pip/#start_with_pip_anaconda_miniconda","text":"pip install -r requirements.txt pip install -r requirements-dev.txt inv command is also available.","title":"Start with pip (Anaconda, Miniconda)"},{"location":"getting-started/pipenv/","text":"Start with pipenv \u00b6 pipenv \u00b6 Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans. Install all packages \u00b6 pipenv sync --dev # Installs all packages specified in Pipfile.lock. Run MkDocs \u00b6 pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve pipenv run \u00b6 pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"Start with pipenv"},{"location":"getting-started/pipenv/#start_with_pipenv","text":"","title":"Start with pipenv"},{"location":"getting-started/pipenv/#pipenv","text":"Pipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. pypa/pipenv: Python Development Workflow for Humans.","title":"pipenv"},{"location":"getting-started/pipenv/#install_all_packages","text":"pipenv sync --dev # Installs all packages specified in Pipfile.lock.","title":"Install all packages"},{"location":"getting-started/pipenv/#run_mkdocs","text":"pipenv shell # Spawns a shell within the virtualenv. mkdocs serve Or, run mkdocs with pipenv run pipenv run mkdocs serve","title":"Run MkDocs"},{"location":"getting-started/pipenv/#pipenv_run","text":"pipenv task are also defined by Pipfile pipenv run version # mkdocs --version pipenv run help # mkdocs --help pipenv run inv serve # inv serve pipenv run serve # mkdocs serve pipenv run build # mkdocs build pipenv run deploy # mkdocs gh-deploy","title":"pipenv run"},{"location":"hosting-and-deployment/aws-amplify-console/","text":"Host on AWS Amplify Console \u00b6 AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/aws-amplify-console/#host_on_aws_amplify_console","text":"AWS Amplify Console You can use Password protection each branch. Use the following build specification YML file. mkdocs-material-boilerplate/amplify.yml","title":"Host on AWS Amplify Console"},{"location":"hosting-and-deployment/combinations/","text":"Hosting and Deployment \u00b6 GitHub Pages and GitHub \u00b6 Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions GitLab Pages and GitLab \u00b6 Host source code on GitLab. Build and deploy with GitLab CI/CD. Netlify \u00b6 Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify. AWS Amplify Console \u00b6 Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#hosting_and_deployment","text":"","title":"Hosting and Deployment"},{"location":"hosting-and-deployment/combinations/#github_pages_and_github","text":"Host source code on GitHub. Build and deploy with: mkdocs gh-deploy GitHub Actions","title":"GitHub Pages and GitHub"},{"location":"hosting-and-deployment/combinations/#gitlab_pages_and_gitlab","text":"Host source code on GitLab. Build and deploy with GitLab CI/CD.","title":"GitLab Pages and GitLab"},{"location":"hosting-and-deployment/combinations/#netlify","text":"Host source code on: GitHub GitLab BitBucket Build and deploy with Netlify.","title":"Netlify"},{"location":"hosting-and-deployment/combinations/#aws_amplify_console","text":"Host source code on: GitHub GitLab BitBucket AWS CodeCommit Build and deploy with AWS Amplify Console.","title":"AWS Amplify Console"},{"location":"hosting-and-deployment/github-pages/","text":"Host on GitHub Pages \u00b6 Demo site on GitHub Pages (build & deploy with GitHub Actions) Build and deploy with GitHub Actions \u00b6 peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details. Build and deploy with mkdocs gh-deploy \u00b6 pipenv \u00b6 pipenv run deploy # OR pipenv shell mkdocs gh - deploy # OR pipenv run mkdocs gh - deploy","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#host_on_github_pages","text":"Demo site on GitHub Pages (build & deploy with GitHub Actions)","title":"Host on GitHub Pages"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_github_actions","text":"peaceiris/actions-gh-pages: GitHub Actions for deploying to GitHub Pages with Static Site Generators Go to the repository and read the latest README.md for more details.","title":"Build and deploy with GitHub Actions"},{"location":"hosting-and-deployment/github-pages/#build_and_deploy_with_mkdocs_gh-deploy","text":"","title":"Build and deploy with mkdocs gh-deploy"},{"location":"hosting-and-deployment/github-pages/#pipenv","text":"pipenv run deploy # OR pipenv shell mkdocs gh - deploy # OR pipenv run mkdocs gh - deploy","title":"pipenv"},{"location":"hosting-and-deployment/gitlab-pages/","text":"Host on GitLab Pages \u00b6 See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/gitlab-pages/#host_on_gitlab_pages","text":"See .gitlab-ci.yml","title":"Host on GitLab Pages"},{"location":"hosting-and-deployment/netlify/","text":"Host on Netlify \u00b6 Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"},{"location":"hosting-and-deployment/netlify/#host_on_netlify","text":"Demo site on Netlify (build & deploy with Netlify) Create GitHub repository and deploy to Netlify with the following button in 1 min.","title":"Host on Netlify"}]}